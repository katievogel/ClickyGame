{"version":3,"sources":["components/FirstPage/index.js","components/WinModal/index.js","components/LoseModal/index.js","App.js","index.js"],"names":["Card","props","className","onClick","onCardClick","src","image","alt","WinModal","show","win_showing","display","style","tabIndex","role","type","data-dismiss","close","aria-label","LoseModal","lose_showing","shuffleTiles","titanArray","i","length","j","Math","floor","random","shift","App","state","titan","score","highScore","console","log","setState","this","href","map","key","id","process","clicked","newTitan","nextScore","resetTitan","t","t2","highScoreCheck","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a695f97c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Card(props) {\n    return (\n      <div className=\"tiles\" onClick={props.onCardClick}>\n        <img src={props.image} alt=\"cat pic\" />\n      </div>\n    );\n  }\n\n  export default Card;","import React from \"react\";\n\n\nfunction WinModal(props) {\n  var show;\n  if (props.win_showing === true) {\n    show = { display: \"block\" };\n  } else {\n    show = { display: \"none\" };\n  }\n  return (\n    <div style={show} className=\"modal win_modal fade show\" tabIndex=\"-1\" role=\"dialog\">\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">U haz won!</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={props.close}aria-label=\"Close\">CLOSE</button>\n          </div>\n          <div className=\"modal-body\">\n            <img src=\"/titan_content.jpg\" alt=\"content cat\"></img>\n            <p>Titan is pleased, though generally disinterested in most things. See if you can win again!</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WinModal;","import React from \"react\";\n\n\nfunction LoseModal(props) {\n  var show;\n  if (props.lose_showing === true) {\n    show = { display: \"block\" };\n  } else {\n    show = { display: \"none\" };\n  }\n  return (\n    <div style={show} className=\"modal lose_modal fade show\" tabIndex=\"-1\" role=\"dialog\">\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">U haz lost!</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" \n            onClick={props.close} aria-label=\"Close\">CLOSE</button>\n          </div>\n          <div className=\"modal-body\">\n            <img src=\"/titan_displeased.jpg\" alt=\"displeased cat\"></img>\n            <p>Titan is disappointed by your lack of skill! Try again!</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\n\nexport default LoseModal;","import React, { Component } from 'react';\nimport Card from './components/FirstPage';\nimport WinModal from './components/WinModal';\nimport LoseModal from './components/LoseModal';\nimport './App.css';\nimport titan from './Titan.json';\n\nfunction shuffleTiles(titanArray) {\n  for (let i = titanArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * i);\n    const shift = titanArray[i];\n    titanArray[i] = titanArray[j];\n    titanArray[j] = shift;\n  }\n  return titanArray;\n};\n\nclass App extends Component {\n  state = {\n    titan,\n    score: 0,\n    highScore: 0,\n    lose_showing: false,\n    win_showing: false\n  };\n\n  highScoreCheck() {\n    let highScore = this.state.highScore;\n    if (this.state.score >= highScore) {\n      highScore = this.state.score;\n    }\n    else {\n      highScore = this.state.highScore;\n    }\n    return highScore;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"jumbotron\">\n            <h1>Clicky Game!</h1>\n            <h2>Click on an image to earn points, but don't click on any more than once!</h2>\n          </div>\n          <ul>\n            <li>Score: {this.state.score} | Top Score: {this.state.highScore}</li>\n            <li><a href=\"/\">Reset Scores and Try Again</a></li>\n          </ul>\n        </header>\n        <main>\n         {/* The commented code below may help you test Wins by displaying the JSON on the page, though it moveds the tiles, or you can see them log in the console watch the names of each picture as you click*/}\n          {/* <pre>{JSON.stringify(this.state, null, 2)}</pre> */}\n          {this.state.titan.map((titan, i) => (\n            <Card\n              key={titan.id}\n              image={process.env.PUBLIC_URL + titan.image}\n              onCardClick={() => {\n                if (this.state.titan[i].clicked === false) {\n                  console.log(\"card click from App \" + titan.image)\n                  const newTitan = [...this.state.titan];\n                  newTitan[i].clicked = true;\n                  var nextScore = this.state.score + 1;\n                  this.setState({\n                    score: nextScore\n                  });\n                  if (nextScore === 12) {\n                    console.log(\"U haz won!\");\n                    this.setState({\n                      highScore: nextScore,\n                      win_showing: true\n                    });\n\n                  } else if (this.state.score !== 12) {\n                    this.setState({\n                      score: this.state.score + 1,\n                      titan: shuffleTiles(newTitan)\n                    });\n                  }\n                } else {\n                  console.log(\"U haz lost.\")\n                  const resetTitan = [...this.state.titan].map(t => {\n                    let t2 = { ...t };\n                    t2.clicked = false;\n                    return t2;\n                  })\n                  this.setState({\n                    highScore: this.highScoreCheck(),\n                    score: 0,\n                    titan: shuffleTiles(resetTitan),\n                    lose_showing: true\n                  });\n                }\n              }}\n            />\n          ))}\n        </main>\n        <WinModal win_showing={this.state.win_showing}\n          close={this.close} />\n        <LoseModal lose_showing={this.state.lose_showing}\n          close={this.close} />\n      </div>\n\n    );\n  }\n\n  close = () => {\n    console.log('close');\n    this.setState({ lose_showing: false });\n    this.setState({ win_showing: false })\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}